#!/usr/bin/env awk -f

# THOUGHT FOR 1m 15s
# draw-table: reads tab-separated lines and prints a Unicode box table
BEGIN { FS="\t"; OFS=""; }
{
  if (NF == 0) next
  cmd  = $1
  desc = ($2 == "" ? "" : $2)
  for (i = 3; i <= NF; ++i) desc = desc "\t" $i

  if (length(cmd)  > max1) max1  = length(cmd)
  if (length(desc) > max2) max2 = length(desc)
  rows[++r] = cmd "\t" desc
}
END {
  if (r == 0) {
    print "No rows found."
    exit
  }
  w1 = max1 + 2
  w2 = max2 + 2

  # top border
  printf "â•­"; for (i = 0; i < w1; ++i) printf "â”€"; printf "â”¬"; for (i = 0; i < w2; ++i) printf "â”€"; printf "â•®\n"

  # header
  fmt = "â”‚ %-" (w1-2) "s â”‚ %-" (w2-2) "s â”‚\n"
  printf fmt, "ï’µ  cmd", "  ðŸ›    description"

  # header separator
  printf "â”œ"; for (i = 0; i < w1; ++i) printf "â”€"; printf "â”¼"; for (i = 0; i < w2; ++i) printf "â”€"; printf "â”¤\n"

  # rows
  for (i = 1; i <= r; ++i) {
    split(rows[i], a, "\t")
    printf fmt, a[1], a[2]
  }

  # bottom border
  printf "â•°"; for (i = 0; i < w1; ++i) printf "â”€"; printf "â”´"; for (i = 0; i < w2; ++i) printf "â”€"; printf "â•¯\n"
}

#/usr/bin/env bash

#cowsay -f actually "HELLO $1"
